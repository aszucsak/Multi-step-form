{"version":3,"sources":["components/FormUserDetails.js","components/FormPersonalDetails.js","components/Confirm.js","components/Success.js","components/UserForm.js","App.js","serviceWorker.js","index.js"],"names":["FormUserDetails","continue","e","preventDefault","props","nextStep","this","values","handleChange","title","hintText","floatingLabelText","onChange","defaultValue","firstName","lastName","email","label","primary","style","styles","button","onClick","Component","margin","FormPersonalDetails","back","prevStep","occupation","city","bio","Confirm","List","primaryText","secondaryText","Success","UserForm","step","state","setState","input","target","value","bind","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89ccbafd.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nclass FormUserDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <Fragment>\r\n          <AppBar title=\"Enter user Details\" />\r\n          <TextField\r\n            hintText=\"Enter Your First Name\"\r\n            floatingLabelText=\"First Name\"\r\n            onChange={handleChange(\"firstName\")}\r\n            defaultValue={values.firstName}\r\n          />\r\n          <br />\r\n          <TextField\r\n            hintText=\"Enter Your Last Name\"\r\n            floatingLabelText=\"Last Name\"\r\n            onChange={handleChange(\"lastName\")}\r\n            defaultValue={values.lastName}\r\n          />\r\n          <br />\r\n          <TextField\r\n            hintText=\"Enter Your Email\"\r\n            floatingLabelText=\"Email\"\r\n            onChange={handleChange(\"email\")}\r\n            defaultValue={values.email}\r\n          />\r\n          <br />\r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n        </Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n};\r\n\r\nexport default FormUserDetails;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nclass FormPersonalDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <Fragment>\r\n          <AppBar title=\"Enter Personal Details\" />\r\n          <TextField\r\n            hintText=\"Enter Your Occupation\"\r\n            floatingLabelText=\"Occupation\"\r\n            onChange={handleChange(\"occupation\")}\r\n            defaultValue={values.occupation}\r\n          />\r\n          <br />\r\n          <TextField\r\n            hintText=\"Enter Your City\"\r\n            floatingLabelText=\"City\"\r\n            onChange={handleChange(\"city\")}\r\n            defaultValue={values.city}\r\n          />\r\n          <br />\r\n          <TextField\r\n            hintText=\"Enter Your Bio\"\r\n            floatingLabelText=\"Bio\"\r\n            onChange={handleChange(\"bio\")}\r\n            defaultValue={values.bio}\r\n          />\r\n          <br />\r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n};\r\n\r\nexport default FormPersonalDetails;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport { List, ListItem } from \"material-ui/List\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nclass Confirm extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    //   Process form\r\n    this.props.nextStep();\r\n  };\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      values: { firstName, lastName, email, occupation, city, bio }\r\n    } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <Fragment>\r\n          <AppBar title=\"Confirm User Data\" />\r\n          <List>\r\n            <ListItem primaryText=\"First Name\" secondaryText={firstName} />\r\n            <ListItem primaryText=\"Last Name\" secondaryText={lastName} />\r\n            <ListItem primaryText=\"Email\" secondaryText={email} />\r\n            <ListItem primaryText=\"Occupation\" secondaryText={occupation} />\r\n            <ListItem primaryText=\"City\" secondaryText={city} />\r\n            <ListItem primaryText=\"Bio\" secondaryText={bio} />\r\n          </List>\r\n          <br />\r\n          <RaisedButton\r\n            label=\"Confirm & Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n};\r\n\r\nexport default Confirm;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport AppBar from \"material-ui/AppBar\";\r\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\r\n\r\nexport class Success extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MuiThemeProvider>\r\n          <Fragment>\r\n            <AppBar title=\"Success\" />\r\n            <h1>Thank You For Your Submission</h1>\r\n            <p>You will get an email with further instructions</p>\r\n          </Fragment>\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Success;\r\n","import React, { Component } from \"react\";\r\nimport FormUserDetails from \"./FormUserDetails\";\r\nimport FormPersonalDetails from \"./FormPersonalDetails\";\r\nimport Confirm from \"./Confirm\";\r\nimport Success from \"./Success\";\r\n\r\nexport class UserForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 1,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      occupation: \"\",\r\n      city: \"\",\r\n      bio: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({ step: step + 1 });\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({ step: step - 1 });\r\n  };\r\n\r\n  handleChange = input => e => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    const { firstName, lastName, email, occupation, city, bio } = this.state;\r\n    const values = { firstName, lastName, email, occupation, city, bio };\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <FormUserDetails\r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <FormPersonalDetails\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Confirm\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n          />\r\n        );\r\n      case 4:\r\n        return <Success />;\r\n      default:\r\n        return <h1>Error</h1>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport UserForm from \"./components/UserForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}